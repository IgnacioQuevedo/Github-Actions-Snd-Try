name: Demo to create automatic PR

on:
  push:
    branches:
      - "feature/**"  # Detecta cambios en tus ramas feature/...
    paths-ignore:
      - "AUTHOR"  # Ignora cambios para evitar loops infinitos
      - "timestamp.txt"

jobs:
  updateAuthor:
    runs-on: ubuntu-latest
    steps:

      # ✅ 1. Verifica si el commit es de create-pull-request (evita loops)
      - name: Skip if PR from create-pull-request
        if: contains(github.event.head_commit.message, '[create-pull-request]')
        run: echo "Skipping workflow triggered by create-pull-request" && exit 0

      # ✅ 2. Verifica el código desde el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # ✅ 3. Identifica y cambia a la rama `feature/...` donde ocurrió el push
      - name: Checkout feature branch
        run: |
          git fetch origin
          git checkout ${{ github.event.ref }}  # Cambia a la rama original del push

      # ✅ 4. Actualiza los cambios desde la rama feature y main
      - name: Merge feature branch into main
        run: |
          git pull origin ${{ github.event.ref }} --rebase  # Actualiza desde feature/...
          git pull origin main --rebase  # Trae los cambios más recientes de main

      # ✅ 5. Extrae datos del commit
      - name: Extract commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      # ✅ 6. Actualiza el archivo AUTHOR con el nombre del autor del commit
      - name: Update Author information
        run: echo "${{ env.GIT_COMMIT_AUTHOR_NAME }}" > AUTHOR

      # ✅ 7. Añade timestamp para forzar un cambio
      - name: Force Change to Trigger PR
        run: echo "$(date)" > timestamp.txt

      # ✅ 8. Añade TODOS los cambios al commit (incluyendo los nuevos)
      - name: Add all changes
        run: |
          git add .
          git commit -m "Update commit with all changes" || echo "No changes to commit"

      # ✅ 9. Verifica si hay cambios antes de continuar
      - name: Check for changes
        run: |
          git diff --quiet || echo "There are changes to commit" || exit 1

      # ✅ 10. Elimina la rama 'auto-pr-branch' si ya existe para evitar conflictos
      - name: Delete auto-pr-branch if it exists
        run: |
          git push origin --delete auto-pr-branch || echo "Branch does not exist, continuing..."

      # ✅ 11. Crea el Pull Request automático desde `feature/...` hacia `main`
      - name: Raise PR
        uses: peter-evans/create-pull-request@v3
        with:
          branch: "auto-pr-branch"
          base: main
          title: "This is the title of the automatic PR"
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          author: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}>
          body: "This is the body of the automatic PR"
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-branch: true

      # ✅ 12. Habilita depuración para obtener más detalles en caso de errores
      - name: Enable Debug Mode (Optional)
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
